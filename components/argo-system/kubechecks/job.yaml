apiVersion: batch/v1
kind: Job
metadata:
  name: argocd-token-rotator
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
spec:
  template:
    spec:
      serviceAccountName: automation-job
      restartPolicy: OnFailure
      containers:
        - name: token-generator
          image: quay.io/argoproj/argocd:v3.1.7
          command: ["/bin/sh", "-c"]
          args:
            - |
              set -e
              USERNAME=admin
              PASSWORD=$(cat /creds/admin.password)

              echo "üîë Logging into ArgoCD"
              argocd login argocd-server.argo-system.svc.cluster.local:443 \
                --username $USERNAME \
                --password $PASSWORD \
                --insecure --grpc-web

              echo "‚öôÔ∏è Generating token..."
              TOKEN=$(argocd account generate-token --account $USERNAME)

              echo "üì¶ Updating Kubernetes Secret..."
              kubectl -n target-namespace delete secret argocd-token --ignore-not-found
              kubectl -n target-namespace create secret generic argocd-token \
                --from-literal=KUBECHECKS_ARGOCD_API_TOKEN=$TOKEN
          volumeMounts:
            - name: creds
              mountPath: /creds
              readOnly: true
      volumes:
        - name: creds
          secret:
            secretName: argocd-secret
