---
global:
  deploymentAnnotations:
    secret.reloader.stakater.com/reload: "authentik-secret"
  storageClass: openebs-hostpath
  envFrom:
    - secretRef:
        name: authentik-secret
authentik:
  log_level: info
  avatars: "gravatar,initials"
  email:
    host: "smtp.sendgrid.net"
    port: 587
    username: "apikey"
    from: "Access <access@${CLUSTER_DOMAIN}>"
  error_reporting:
    enable: false
    send_pii: false
  outposts:
    container_image_base: ghcr.io/goauthentik/%(type)s:%(version)s
  redis:
    host: "valkey.default.svc.cluster.local"
server:
  replicas: 1
  initContainers:
    - name: init-db
      image: ghcr.io/home-operations/postgres-init:17.6.0@sha256:86a1992d46273c58fd4ad95b626081dfaabfe16bd56944675169e406d1a660dd
      imagePullPolicy: IfNotPresent
      envFrom:
        - secretRef:
            name: authentik-secret
  metrics:
    serviceMonitor:
      enabled: true
  ingress:
    enabled: true
    ingressClassName: external
    annotations:
      gethomepage.dev/enabled: "true"
      gethomepage.dev/group: Ingress
      gethomepage.dev/icon: authentik.png
      external-dns.alpha.kubernetes.io/target: "external.${CLUSTER_DOMAIN}"
      gethomepage.dev/siteMonitor: http://authentik-server.default:80
    hosts:
      - &host id.${CLUSTER_DOMAIN}
    paths:
      - /
    tls:
      - hosts:
          - *host
geoip:
  enabled: false
  existingSecret:
    secretName: "authentik-secret"
    accountId: "MAXMIND_ACCOUNT_ID"
    licenseKey: "MAXMIND_LICENSE_KEY"
prometheus:
  rules:
    enabled: true
postgresql:
  enabled: false
redis:
  enabled: false
